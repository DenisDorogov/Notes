ReactJS

---------------|||  Установка  |||--------------

Скачаем node.js установочник с сайта nodejs.org
Установливаем его в систему.

В консоли в общей папке с проектами:
npx create-react-app name-app //Создаст папку name-app и там создаст проект

В консоли в папке проекта:
npx create-react-app . //Создаст проект прям в этой папке 

В папке проекта:
npm start //Запускается nodejs сервер

Сервер запустится по адресу:
http://localhost:3000/

npm install //Устанавливает зависимости описанные в package.json в node-modules,
обновляет ранее установленные.


-------<  Расширения VS Code  >--------
//Auto import - автоматически добавляет строчку импорта при добавлении компонента


-------<    >--------

_________________________________________________________________________________________

---------------|||  Компоненты  |||--------------

Пример:
-------<  index.js  >--------

ReactDOM.render(
  <React.StrictMode>
    <App />  //Определяет расположение компонента
  </React.StrictMode>,
  document.getElementById('root')
);

-------<  App.js  >--------
import './App.css';

const App = () => { 
  return ( //Возвращаем JSX разметку
    <div className="App">
      Test page
    </div>
  );
}

export default App;

_________________________________________________________________________________________

---------------------|||  Импорт компонентов из других файлов  |||-----------------------
#import

import React from 'react'; //Импорт из модуля

import App from './App'; //импорт компонента App из файла App.js

import './App.css'; //Импорт стилей

component.jsx //Файлы компонента могут имень расширение .jsx

-------<    >--------
-------<    >--------

_________________________________________________________________________________________


----------------------------------|||  Стили  |||----------------------------------------
#стили #style
Импорт из файла стилей:
import './App.css';

------------------------------------<  Модули  >-----------------------------------------
#стили #модули #module

// Создаём файл стиля рядом с js файлом компонента
Header.js
Header.module.css

// Настраиваем импорт:
import style from "./Profile.module.css";

//Применяем:
<div className={style.logo}
<div className={`${style.logo} ${style.hover}`} // Несколько классов
// Классы .logo и .hover в файле Header.module.css


-------<    >--------

_________________________________________________________________________________________

---------------|||  Роутинг  |||--------------

//Устанавливаем пакет
npm install react-router-dom


-------<    >--------
import { BrowserRouter, Route, Routes } from 'react-router-dom';

<BrowserRouter>
...
    <Routes>
		<Route  exact path="/dialogs" element={<Dialogs />} />
		//exact - только точное совпадение пути. Без '/dialogs/id3445'
		<Route path="/profile" element={<Profile />} />
		
		<Route path="/profile" element={<Profile img='./img/12123.jpg'/>} /> //Props
    </Routes>
...           
</BrowserRouter>

-------<    >--------


_________________________________________________________________________________________

------------------------|||  Взаимодействие с компонентом  |||---------------------------
#onClick #ref

------------------------------------<  onClick  >----------------------------------------
#onClick

<button onClick={() => console.log('клик')}>

const click = () => console.log('клик');
<button onClick={ click }>



---------------------------------------<  Ref  >-----------------------------------------
#ref

Рефы дают возможность получить доступ к DOM-узлам или React-элементам, созданным в рендер-методе или функциональном компоненте.

const MyComponent...
...
const.myRef = React.createRef();//Создание ссылки

const.node = myRef.current; //Использование ссылки


return (<div ref={ myRef } />;) //Элемент для которого нужна ссылка
_________________________________________________________________________________________

-----------------------------------|||  State  |||---------------------------------------
#state


-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||  Баги Дебаггер  |||--------------
#bag #debugger

debugger;
 
-------<    >--------
-------<    >--------




_________________________________________________________________________________________

--------------------------|||    |||------------------------------
-------<    >--------
-------<    >--------
_________________________________________________________________________________________

--------------------------|||    |||------------------------------
-------<    >--------
-------<    >--------
_________________________________________________________________________________________

--------------------------|||    |||------------------------------
-------<    >--------
-------<    >--------
_________________________________________________________________________________________

--------------------------|||    |||------------------------------
-------<    >--------
-------<    >--------
_________________________________________________________________________________________

--------------------------|||    |||------------------------------
-------<    >--------
-------<    >--------
