_________________________________________________________________________________________

----------------------|||  Урок 1. Архитектура веб-приложений  |||-----------------------
Информация:
Трансляция -> https://youtu.be/hGTLFjJUC40
Связаться со мной:
tg: @iCliff

Дополнительная литература:
1. Паттерны проектирования - Фримен Э.
2. Приемы объектно-ориентированного проектирования. Паттерны проектирования - Гамма Э., Джонсон Р., Хелм Р.
3. РНР: объекты, шаблоны и методики программирования - Зандстра М.
4. Чистая архитектура. Искусство разработки программного обеспечения - Мартин Р.
5. Совершенный код - Макконнелл С.

Полезные ссылки:
https://bourabai.ru/alg/oop2.htm - теория декомпозиции
https://habrahabr.ru/post/74330/ - методы проектирования ПО
https://www.draw.io/ - инструментарий для проектирования (альтернатива Visio)

Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 2. Принципы проектирования. UML  |||--------------
Информация:
Трансляция -> https://youtu.be/3JnGaNjEO-0
Полезные ссылки:
Домашнее задание:
Цель задания — научиться рисовать UML-диаграмму и диаграмму последовательности.
1. Для выбранного на первом уроке проекта составить полную диаграмму классов. По 
возможности постарайтесь описать как можно больше частей системы.
2. Выделить три основных, на ваш взгляд, процесса. Изобразите для этих процессов диаграм-
мы последовательностей.

-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

-----------|||  Урок 3. Проблемы при использовании шаблонов. Антипаттерны.  |||----------
Информация:
 Трансляция -> https://youtu.be/RTsDlBACMYM
Полезные ссылки:
Домашнее задание:
Цель задания — научиться критически подходить к принятию решений, постараться понять, 
какие реализации считаются хорошими, а какие следует переписать.
1. Провести анализ проекта на использование антипаттернов. Какие антипаттерны удалось 
обнаружить? О каких из них вы заранее знали, а какие возникли случайно?
2. Распределить обнаруженные антипаттерны по категориям согласно предложенной здесь 
классификации. Предложить способы избавления от антипаттернов. Возникли ли случаи, когда 
существование антипаттерна оправдано?

-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 4. Порождающие шаблоны  |||--------------
Информация:
 Трансляция -> https://youtu.be/r32b0gll8Oc
Полезные ссылки:
Домашнее задание:
Необходимо разработать и реализовать на PHP собственную ORM (Object-Relational Mapping - 
прослойка между базой данных и кодом) посредством абстрактной фабрики. Фабрики будут 
реализовывать интерфейсы СУБД MySQLFactory, PostgreSQLFactory, OracleFactory. Каждая 
фабрика возвращает объекты, характерные для конкретной СУБД. Пример компонентов:
DBConnection - соединение с базой,
DBRecrord - запись таблицы базы данных,
DBQueryBuiler - конструктор запросов к базе.
В конечном итоге должна получиться гибкая система, позволяющая динамически менять базу 
данных и инкапсулирующая взаимодействие с ней внутри продуктов конкретных фабрик. 
Углубляться в детали компонента не обязательно. Достаточно их наличия.
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 5. Структурные шаблоны  |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
1. Реализовать на PHP пример Декоратора, позволяющий отправлять уведомления несколькими 
различными способами (рассмотрен на уроке).
2. Реализовать паттерн Адаптер для связи внешней библиотеки (классы SquareAreaLib и 
CircleAreaLib) вычисления площади квадрата (getSquareArea) и площади круга 
(getCircleArea) с интерфейсами ISquare и ICircle имеющегося кода. Примеры классов 
даны ниже. Причём во внешней библиотеке используются для расчётов формулы нахождения 
через диагонали фигур, а в интерфейсах квадрата и круга — формулы, принимающие значения 
одной стороны и длины окружности соответственно.
Внешняя библиотека:
<?php
class CircleAreaLib
{
public function getCircleArea(int $diagonal)
{
$area = (M_PI * $diagonal**2))/4;

   return $area;
}
}

class SquareAreaLib
{
public function getSquareArea(int $diagonal)
{
$area = ($diagonal**2)/2;

   return $area;
}
}

Имеющиеся интерфейсы:
<?php
interface ISquare
{
function squareArea(int $sideSquare);
}

interface ICircle
{
function circleArea(int $circumference);
}

 


-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 6. Поведенческие шаблоны  |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 7. Архитектурные шаблоны  |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
1. Наблюдатель: имеется сайт HandHunter.gb. На нем работники могут подыскать себе 
вакансию РНР программиста. Необходимо реализовать классы искателей с их именем, почтой и 
стажем работы. Также реализовать возможность в любой момент встать на биржу вакансий 
(подписаться на уведомления), либо же напротив выйти из гонки за местом. Таким образом, 
как только появится новая вакансия программиста, все жаждущие автоматически получат 
уведомления на почту (можно реализовать условно)
2. Ознакомиться с паттернами в предложенной литературе https://yadi.sk/d/clkrcK3MeJNI3w
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------


_________________________________________________________________________________________

---------------|||  Урок 8. Паттерны работы с базами данных  |||--------------
Информация:
Полезные ссылки:
Lazy-load: 
https://web-programming.com.ua/zhadnaya-i-lenivaya-zagruzka-v-laravel-metody-with-i-load/

https://phpprofi.ru/blogs/post/71

Домашнее задание:
Команда: Вы - разработчик продукта Macrosoft World. Это текстовый редактор с возможностями 
копирования, вырезания и вставки текста (пока только это). Необходимо реализовать механизм 
по логированию этих операций и возможностью отмены и возврата действий. Т.е. в ходе работы 
программы Вы открываете текстовый файл .txt и выделяете участок кода (2 значения: начало и
конец) и выбираете, что с этим кодом делать.

-------<  Заключение  >--------
Должны знать:
Фабричный метод
Абстрактная фабрика
Bilder
Adapter
Поведенческие патерны
Decorator
Facade



-------<    >--------
-------<    >--------
-------<    >--------
