_________________________________________________________________________________________

--------------|||          Урок 1. Установка Laravel.               |||------------------
--------------||| Описание принципов работы и структуры фреймворка  |||------------------
Информация:
Полезные ссылки:
Домашнее задание:
1. Настроить на локальной машине окружение для работы с фреймворком.
2. Ознакомиться с документацией
3. Установить Laravel.
4. Реализовать несколько страниц с выводом какой-либо информации.

-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------




_________________________________________________________________________________________

-------------------|||  Урок 2. Роутинг. Использование контроллеров  |||-----------------
-- Информация:

-- Полезные ссылки:
	https://github.com/barryvdh/laravel-ide-helper
	https://github.com/barryvdh/laravel-debugbar

-- Домашнее задание:
1. Добавить в проект несколько контроллеров. Создать минимум 4 страницы. К примеру:
	a. Страницу приветствия.
	b. Страницу категорий новостей.
	c. Страницу вывода новостей по конкретной категории.
	d. Страницу вывода конкретной новости.
	e. Страницу авторизации.
	f. Страницу добавления новости.

2. 	Выбрать и сверстать дизайн для станиц приложения. Он не должен быть сложным, но 
	обязательно должен содержать в себе 4 блока: блок шапки сайта, подвала, место вывода 
	контента и область меню.

Установим laravel-ide-helper отладчик.
https://github.com/barryvdh/laravel-ide-helper - страница
composer require --dev barryvdh/laravel-ide-helper - выполнять в homestead

Создадим конроллер через командную строку artisan:
$ php artisan make:controller TestController 
	набираем в командной строке homestead в папке фреймфорка.

<?php // D:\code\laravel\app\Http\Controllers\TestController.php
namespace App\Http\Controllers;
use Illuminate\Http\Request;

class TestController extends Controller
{
    public function testAction() {
        echo "This is test controller TestController";
    }

    public function testActionName($name, $lastname) {
        echo "Hello {$name} {$lastname}!";
    }
}

?>
<?php //D:\code\laravel\routes\web.php

Route::get('/test', 'TestController@testAction'); // "This is test controller TestController"

Route::get('/hello/{name}/{lastname}.html', 'TestController@testActionName'); 
// В адресной строке: http://laravel.local/hello/Vasya/Ivanov.html --> Hello Vasya Ivanov!
?>

-- Попробуем потестировать на примере статей:

$ php artisan make:controller Articles/IndexController
	набираем в командной строке homestead в папке фреймфорка.
	Создаётся Папка и контроллер.
	
Используем шаблонизатор blade.
Шпаргалка по blade:
https://github.com/urmideg/laravel.examples/wiki/%D0%A8%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD%D0%B8%D0%B7%D0%B0%D1%82%D0%BE%D1%80-Blade
	

<?php //D:\code\laravel\routes\web.php

use Illuminate\Support\Facades\Route;

Route::get('/articles.html', 'Articles\IndexController@listArticles');
?>

<?php //D:\code\laravel\app\Http\Controllers\Articles\IndexController.php

namespace App\Http\Controllers\Articles;
use App\Http\Controllers\Controller;
use Illuminate\Http\Request;

class IndexController extends Controller
{
    public function listArticles()
    {
        $articles = [
            'Первая статья',
            'Вторая статья',
            'Третья статья'
        ];

        return view('articles.listArticles', [
            'articles' => $articles

        ]);
		//Папка articles, файл listArticles.blade.php
    }
}
?>


<!doctype html> <!--D:\code\laravel\resources\views\articles\listArticles.blade.php -->
<html> <!-- В названии blade - шаблонизатор -->
<head><title>Список статей</title></head>
<body>
    <div class="list-articles">
        @foreach($articles as $key => $value)
            <p><a href="">{{$key}} - {{$value}}</a></p>
            {{-- <?php echo $key ?> эквивалент {{}} --}}
            {{-- @php @endphp вместо тегов php--}}
        @endforeach
    </div>
</body>
</html>



-- Теперь сделаем ссылки рабочими.

<?php //D:\code\laravel\routes\web.php

Route::get('/article/{id}.html', 'Articles\IndexController@getArticle')->name('article');
// ->name() называем наш роут определённым именем, что-бы вызвать во вьюшке
?>


<?php //D:\code\laravel\app\Http\Controllers\Articles\IndexController.php


class IndexController extends Controller
{
    protected $articles = [];

    public function __construct()
    {
        $this->articles = [
            'Первая статья',
            'Вторая статья',
            'Третья статья'
        ];
    }
    public function listArticles()
    {
        return view('articles.listArticles', [
            'articles' => $this->articles

        ]);
    }

    public function getArticle(int $id)
    {
        if (!isset($this->articles[$id])) {
            return abort (404);
        }
         return view('articles.article', [
            'article' => $this->articles[$id]

        ]);
    }
?>


<body> <!-- D:\code\laravel\resources\views\articles\listArticles.blade.php -->
    <div class="list-articles">
        @foreach($articles as $key => $value)
            <p><a href="{{route('article', ['id' => $key])}}">{{$key}} - {{$value}}</a></p>
			<!-- Вызываем роут с именем article, и передаём ему параметр -->
        @endforeach
    </div>
</body>



<body> <!-- D:\code\laravel\resources\views\articles\article.blade.php -->
    {{$article}}
</body>

Теперь ссылки работают, статьи открываются.








Видео 1:09 - закончил


Создадим каталог для наших вьюшек: D:\code\laravel\resources\views\articles


<?php?>
<?php?>
<?php?>
-------<    >--------
<?php?>
<?php?>
<?php?>
<?php?>

-------<    >--------
<?php?>
-------<    >--------
<?php?>
-------<    >--------
<?php?>



_________________________________________________________________________________________

---------------|||    |||--------------
-- Информация:
-- Полезные ссылки:
-- Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------



_________________________________________________________________________________________

---------------|||    |||--------------
Информация:
Полезные ссылки:
Домашнее задание:
-------<    >--------
-------<    >--------
-------<    >--------
-------<    >--------