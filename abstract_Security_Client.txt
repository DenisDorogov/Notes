Безопасность клиентской части веб-приложений

Душкевич Владимир Генадьевич
@shodin


---------------|||  Урок 1. Что такое XSS  |||--------------

positive technologies

Материалы по аттакам
https://attack.mitre.org/
https://attack.mitre.org/techniques/T1189/

Как пользоваться burp suite
https://cloud.mail.ru/public/3eFZ/2zuM27rfj?_ga=2.89475931.1384823228.1640258545-407801622.1635864714

Ссылка на ВМ для курса
https://disk.yandex.ru/d/U1EMoROX_izcNQ

Домашнее задание
1. Внимательно изучите все задачи из раздела «Практика» данной методички и ответьте: как можно использовать поисковые запросы при поиске уязвимостей XSS?
2. Допустим, вы обнаружили, что на странице есть уязвимый к XSS параметр, в который можно выполнить инъекцию вектором <script>alert(document.cookie)</script>. Как проверить, к какому типу относится инъекция (Reflected, Stored, DOM, Self или Blind)? Ответ обоснуйте. Домашнее задание (повышенная сложность):
3.*Попробуйте решить задание 1 из https://unescape-room.jobertabma.nl/ в разделе practice. В качестве решения приложите скриншот.
4.*Попробуйте самостоятельно установить OWASP Mutillidae и выполнить рассматриваемые задания.



ifup eth1 //Включение "разъёма" в виртуальной машине учебного сервера.


------------------------------------<  Векторы атак  >-----------------------------------
<script>alert(123)<script>
<BODY onload=javascript:alert(1)>
<BODY onload=javascript:javascript:alert(1)>
<IFRAME SRC="javascript:alert('XSS');"></IFRAME>
<IMG SRC=x onabort="alert(String.fromCharCode(88,83,83))">
<IMG SRC=# onmouseover="alert('xxs')">
<IMG SRC=1 onmouseover="alert('xxs')">
<svg/onload=alert(1)>



-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 2. Контексты XSS  |||--------------
Домашнее задание:
1. Найдите XSS на странице XSS(Stored) проекта DVWA на простом (Low) уровне сложности и определите ее тип. Составьте отчет о найденной уязвимости. В отчете укажите, в каком контексте присутствует XSS.
2. Найдите XSS на странице XSS(Reflected) проекта DVWA на простом (Low) уровне сложности и определите ее тип. Составьте отчет о найденной уязвимости. В отчете укажите, в каком контексте присутствует XSS.
3. Найдите XSS на странице XSS(DOM) проекта DVWA на простом (Low) уровне сложности и определите ее тип. Составьте отчет о найденной уязвимости. В отчете укажите, в каком контексте присутствует XSS.

Домашнее задание (повышенная сложность):
3* Выполните установку компонентов, необходимых для выполнения практических занятий, согласно инструкции из методички к уроку 2.
4* Найдите максимальное число XSS на странице Pen Test Tool Lookup (AJAX Version) в OWASP Mutillidae, определите их тип и составьте отчет о найденных уязвимостях.

tryhackme.com

root-me.org

-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 3. Классификация XSS  |||--------------

Домашнее задание:
Найдите XSS на странице XSS – Reflected (GET) проекта bWAPP (уровень сложности Medium) и определите ее тип. Составьте отчет о найденной уязвимости.
Продемонстрируйте страницу из задания 1 на наличие XSS вектором, который использует событие onerror. Дополните отчет найденной информацией.
Домашнее задание (повышенная сложность):

* Попробуйте самостоятельно найти и реализовать XSS на странице XSS(DOM) проекта DVWA на высоком (High) уровне сложности.
* Попробуйте самостоятельно активировать CSP в ВМ, которую мы собирали на прошлом занятии, и открыть страницу проекта Mutillidae (например, http://192.168.56.102/mutillidae/). Объясните, почему внешний вид страницы изменился.
* Реализуйте XSS на странице XSS – Stored (Blog) проекта bWAPP (уровень сложности Medium) таким образом, чтобы произошел дефейс страницы при ее следующей загрузке.


https://hackerone.com/hacktivity - деньги за уязвимость
acunetix.com - про уязвимости
https://portswigger.net/web-security/all-labs - лабораторные работы от создателей burp suite
	
-------<    >--------
-------<    >--------

_________________________________________________________________________________________


---------------|||  Урок 4  |||--------------

Домашнее задание:
Найдите XSS на странице Set Background Color проекта Mutillidae, составьте отчет о найденной уязвимости.
Составьте вектор, который эксплуатирует найденную в задании 1 XSS таким образом, чтобы «подцепить» браузер пользователя на BeEF. После подцепления реализуйте атаку с кражей кук. Авторизуйтесь, используя куки жертвы. После подцепления реализуйте атаку с фишинговой формой.
Домашнее задание (повышенная сложность):

* Подберите такой вектор, который бы менял действие, вызываемое нажатием кнопки на странице http://IP/bwapp/xss_back_button.php. Уровень сложности – Low.
* Реализуйте отправку формы, расположенной на странице http://192.168.56.102/bwapp/xss_login.php (уровень сложности – Low), со страницы, содержащей Stored XSS из проекта bWAPP (http://192.168.56.102/bwapp/xss_stored_1.php).
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 5. Обход WAF  |||--------------

Домашнее задание:
- Выполните установку mod_security (из репозиториев Debian) в копию ВМ, на которой установлены пакеты для работ (DVWA, XVWA и т.д.).
- В установленном пакете mod_security подключите базовые правила защиты от XSS и протестируйте известные вам векторы атак на странице http://192.168.56.104/xvwa/vulnerabilities/reflected_xss.

Домашнее задание (повышенная сложность):
* В установленном пакете mod_security отключите все ранее используемые правила. Создайте виртуальный патч, который будет по «белому» списку защищать от атаки XSS уязвимые параметры «name» на странице http://192.168.56.104/dvwa/vulnerabilities/xss_r, уровень сложности Medium.
* В установленном пакете mod_security отключите все ранее используемые правила. Создайте необходимый набор кастомных правил, который будет защищать от атаки XSS уязвимые параметры на странице http://192.168.56.104/dvwa/vulnerabilities/xss_s/, уровень сложности Medium.
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 6. CSRF  |||--------------

Домашнее задание:
- Найдите уязвимость CSRF (change password) из проекта bWAPP (уровень сложности Low) и составьте отчет об уязвимости.
- Решите задачу по эксплуатации CSRF (Change Secret) из проекта bWAPP (уровень сложности Low) c использованием формы.
- Решите задачу по эксплуатации CSRF из проекта DVWA (уровень сложности Medium).

Домашнее задание (повышенная сложность):
* Решите задачу по эксплуатации CSRF из проекта DVWA (уровень сложности High).
* Решите задачу по эксплуатации CSRF (change password) из проекта bWAPP (уровень сложности Medium).
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 7. Content-Security-Policy  |||--------------
Домашнее задание:
- Выполнить максимально полную защиту сервиса XVWA средствами CSP.
- Выполнить максимально полную защиту сервиса bWAPP средствами CSP.
- Составить план защиты сервиса Mutillidae, в рамках которого можно внедрить CSP, не нарушив при этом работу сервиса. Указать, какие дополнительные средства можно внедрить для защиты от XSS.

Домашнее задание (повышенная сложность):
* Реализовать защиту сервиса Mutillidae согласно разработанному выше плану.
-------<    >--------
-------<    >--------

_________________________________________________________________________________________

---------------|||  Урок 8 Прочие уязвимости на клиенте  |||--------------
Домашнее задание:
- Изучите пример страницы iframe injection проекта bWAPP (iFrame Injection), уровень сложности Low. Каките модно провести атаки на данную страницу?
- Изучите пример страницы Clickjacking проекта bWAPP (ClickJacking (Movie Tickets))? уровень сложности Low. Какие можно провести атаки на данную страницу?
- Изучите пример страницы, содержащей возможность редиректа, из проекта OWASP Mutillidae (Owasp 2012-A10-Credits). Какие можно провести атаки на данную страницу?

Домашнее задание (повышенная сложность):
* Изучите пример страницы, содержащей возможность clickjacking? из проекта OWASP Mutillidae (Owasp 2012-A6-ClickJacking).
Каким образом можно убрать фрейм, не изменяя исходный код страницы?

-------<    >--------
-------<    >--------