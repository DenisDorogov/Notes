--Подключение к серверу

/*Команда соединения MySQL использует следующий синтаксис:

mysql [host] [port] [username] [password] [database]
Каждый из этих аргументов может быть передан команде mysql следующим образом:

--host=host или -hhost
--port=port или -P
--username=username or -uusername
--password=password or -ppassword
база данных задается просто как строка (например db_name) */

mysql -u root -p  --с использованием пользователя и запросом пароля
mysql -u root -h 192.168.0.10 -P 3306 -p  --с данными сервера

--Чтобы сделать дамп базы данных используется расширение mysqldump. Оно имеет следующий синтаксис:

mysqldump [username] [password] [database name] > [dump file]

--Следующий код логируется в сеанс MySQL с учетной записью пользователя root с паролем secret, затем он выгружает таблицу db_world в файл db_worldbak.sql.

mysqldump -uroot -psecret db_world > db_worldbak.sql


-- Создаём базу данных --


show databases; -- смотрим базы данных.
CREATE SCHEMA -- Создаём базу данных.
USE shop; --работаем с базой shop.
SHOW TABLES; --смотрим какие таблицы существуют. 
ALTER TABLE category; --редактируем таблицу
ADD COLUMN alias_name varchar(128) null after discount; --добавляем столбец
show columns category;   --смотрим таблицу
show columns from category;   --смотрим таблицу c описанием


SCHEMA --База(Схема).

SHOW DATABASES; -- смотрим базы данных 
CREATE SCHEMA -- Создаём базу данных.
CREATE SCHEMA 'shop' DEFAULT CHARACTER SET utf8 COLLATE utf8_bin;
USE shop; --работаем с базой shop.
DROP SCHEMA 'shop';

TABLE --Таблица

SHOW TABLES; --смотрим какие таблицы существуют. 
SELECT * FROM shop.category; -- Выбираем все данные из 
SELECT * FROM shop; 
SELECT * FROM shop\G --выведет не в таблице а по строчно




ALTER TABLE category; --редактируем таблицу


CREATE TABLE users (
	id SERIAL PRIMARY KEY, 
);
--#SERIAL псевдоним конструкции: BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE

_________________________________________________________________________________________

---< Календарные функции >---

-- Документация #Календарные функции
-- https://dev.mysql.com/doc/refman/8.0/en/date-and-time-functions.html#function_monthname

-- #Отображение языка календарных значений. #Язык временных функций
-- https://dev.mysql.com/doc/refman/8.0/en/locale-support.html 

SELECT @@lc_time_names;
+-----------------+
| @@lc_time_names |
+-----------------+
| en_US           |
+-----------------+
 /*Cистемная переменная lc_time_names, управляет языком, используемым для отображения названий и сокращений дней и месяцев. Эта переменная влияет на выходные данные функций DATE_FORMAT (), DAYNAME () и MONTHNAME ().*/
 
 SET @@lc_time_names = 'ru_RU'; -- en_US, en_UK...
 
 
 
_________________________________________________________________________________________
 
----------------------||| Представления и Временные таблицы |||--------------------------
#View #Temporary


--------------------------------| Представления |----------------------------------------

/*Представление заменеяет заданный запрос, повторяя его каждый раз при вызове. Результаты не кешируются, производительность не улучшает.*/

--Синтаксис
CREATE VIEW 'Имя Представления' AS SELECT ...;

--Пример
CREATE VIEW students_info AS 
SELECT students.surname, 
students.name, 
courses.name AS course_name, 
streams.number AS stream_number, 
grades.grade 
FROM students 
LEFT JOIN grades ON students.id = grades.student_id 
LEFT JOIN streams ON grades.stream_id = streams.id 
LEFT JOIN courses ON streams.course_id = courses.id;

SELECT * FROM students_info; --Запрос представления

SELECT surname, name, course_name, grade FROM students_info;

DROP VIEW students_info; --Удаление представления.


--------------------------------| Временные таблицы |------------------------------------

/*Временная таблица создаётся в оперативной памяти системы, её данные не сохраняются на носителе информации.*/

--Синтаксис
CREATE TEMPORARY TABLE "Имя временной таблицы" (...);

CREATE TEMPORARY TABLE lesson_scores ( 
Id INTEGER PRIMARY KEY AUTOINCREMENT, 
student_id INTEGER NOT NULL, 
stream_id INTEGER NOT NULL, 
lesson INTEGER NOT NULL, 
score REAL NOT NULL 
);

SELECT * FROM lesson_scores; --Запрос временной таблицы

DROP TABLE lesson_scores; --Удаление


-----------<  >----------


_________________________________________________________________________________________
 
-------------------------------||| Транзакции и Триггеры |||-----------------------------
#TRANSACTION #TRIGGER

-------------------------------------| Транзакции |--------------------------------------
--Синтаксис
BEGIN TRANSACTION; 
Операция 1; 
Операция 2; 
... 
Операция N; 
COMMIT; --Если завершить ROLLBACK;, то изменения не сохранятся, и откатятся.


BEGIN TRANSACTION; 
DELETE FROM grades WHERE student_id = 1; 
DELETE FROM students WHERE id = 1; 
COMMIT;


--------------------------------------| Триггеры |---------------------------------------

--Синтаксис
CREATE TRIGGER 'Имя триггера' [BEFORE|AFTER] 'Событие' 
ON 'Таблица' 
BEGIN 
-- Действия .... 
END;

--Пример триггера проверяющего формат даты перед добавлением данных.
CREATE TRIGGER check_start_date_format BEFORE INSERT 
ON streams 
BEGIN 
	SELECT CASE 
	WHEN
		(NEW.start_date NOT LIKE '____-__-__') 
		OR (CAST(SUBSTR(NEW.start_date, 1, 4) AS INTEGER) NOT BETWEEN 2021 AND 2022) 
		OR (CAST(SUBSTR(NEW.start_date, 6, 2) AS INTEGER) NOT BETWEEN 1 AND 12) 
		OR (CAST(SUBSTR(NEW.start_date, 9, 2) AS INTEGER) NOT BETWEEN 1 AND 31) 
	THEN 
		RAISE(ABORT, 'Wrong format for start_date!') 
	END; 
END;

------------------------------------------<  >-------------------------------------------

 
 
 
_________________________________________________________________________________________
 
------------------------------------||| SQLite |||---------------------------------------
#SQLite

---------------------------| Мета-команды (Дот команды) |--------------------------------
.show - Показывает текущие настройки заданных параметров
.databases - Показывает название баз данных и файлов
.quit - Выход из sqlite3
.tables - Показывает текущие таблицы
.schema - Отражает структуру таблицы
.header - Отобразить или скрыть шапку таблицы (.header on)
.dump - Сделать копию базы данных в текстовом формате
.mode - Выбор режима отображения данных таблицы
	csv - значения, разделенные запятыми
	column - столбцы с выравниванием по левому краю.
	html - код HTML <table>
	insert - инструкции вставки SQL для таблицы
	line - одно значение на строку
	list - Значения, разделенные линией .separator
	tabs - значения, разделенные табуляцией
	tcl - Элементы списка TCL
	json, box, markdown, quote, table, - также применяются.

-----------<  >----------


_________________________________________________________________________________________
 
----------------------------------------|||  |||-----------------------------------------
------------------------------------------|  |-------------------------------------------
------------------------------------------<  >-------------------------------------------
_________________________________________________________________________________________
 
----------------------------------------|||  |||-----------------------------------------
------------------------------------------|  |-------------------------------------------
------------------------------------------<  >-------------------------------------------
_________________________________________________________________________________________
 
----------------------------------------|||  |||-----------------------------------------
------------------------------------------|  |-------------------------------------------
------------------------------------------<  >-------------------------------------------
_________________________________________________________________________________________
 
----------------------------------------|||  |||-----------------------------------------
------------------------------------------|  |-------------------------------------------
------------------------------------------<  >-------------------------------------------
